(include "sys/func.inc")
(include "class/sym/class.inc")
(include "class/lisp/class.inc")

(def-method 'sym :lisp_sym)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args list object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)
	;trashes
	;r1-r14

	(entry 'sym :lisp_sym '(r0 r1))

(errorcases
	(assign '((r1 array_length)) '(r2))
	(gotoif '(r2 /= 1) 'error1))

	(vp-cpy-rr r0 r4)
	(call 'list :get_first '(r1) '(r0 r1))
	(assign `((r1 obj_vtable) (@ ,(f-path 'sym :vtable))) '(r2 r3))
	(vpif '(r2 = r3))
		(vp-push r4)
		(call 'obj :ref '(r1) '(r0))
	(else)
	(errorcases
		(assign `((@ ,(f-path 'str :vtable))) '(r3))
		(gotoif '(r2 /= r3) 'error2))
		(vp-push r4)
		(call 'sym :intern_str '(r1) '(r0))
	(endif)
	(vp-cpy-rr r0 r1)
	(vp-pop r0)

	(exit 'sym :lisp_sym '(r0 r1))
	(vp-ret)

(errorcases
(vp-label 'error1)
	(jump 'lisp :repl_error '(r0 "(sym str)" error_msg_wrong_num_of_args r1))
(vp-label 'error2)
	(jump 'lisp :repl_error '(r4 "(sym str)" error_msg_not_a_string r0)))

(def-func-end)

(def-method 'sym :lisp_gensym)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args list object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)
	;trashes
	;r1-r14

	(entry 'sym :lisp_gensym '(r0 r1))

(errorcases
	(assign '((r1 array_length)) '(r2))
	(gotoif '(r2 /= 0) 'error1))

	(vp-push r0)
	(assign '((r0 lisp_nextsym)) '(r1))
	(vp-add-cr 1 r1)
	(assign '(r1) '((r0 lisp_nextsym)))
	(call 'sym :create_from_long '(r1 10) '(r7))
	(call 'sym :create_from_buffer '("G" 1) '(r8))
	(call 'sym :append '(r8 r7) '(r3))
	(call 'sym :destroy '(r7))
	(call 'sym :destroy '(r8))
	(call 'sym :intern '(r3) '(r1))
	(vp-pop r0)

	(exit 'sym :lisp_gensym '(r0 r1))
	(vp-ret)

(errorcases
(vp-label 'error1)
	(jump 'lisp :repl_error '(r0 "(gensym)" error_msg_wrong_num_of_args r1)))

(def-func-end)
