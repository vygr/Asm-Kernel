(include 'sys/func.inc)
(include 'class/string/class.inc)
(include 'class/integer/class.inc)
(include 'class/lisp/class.inc)

(def-method 'lisp 'func_save)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)

	(ptr 'this 'args 'value)
	(union
		'(pptr 'iter_begin)
		'(ulong 'handle)
		'(ptr 'name))

	(push-scope)
	(entry 'lisp 'func_save {this, args})

(errorcases
	(call 'lisp 'env_args_type {args, $sig, 2})
	(errorif (list (method-output 'lisp 'env_args_type 0) '== 0) 'error1))

	(call 'vector 'get_begin {args} {_, iter_begin})
	(assign {iter_begin[0], iter_begin[ptr_size]} {value, name})
	(call 'sys_pii 'open {&name->string_data, file_open_write} {handle})
	(errorif {handle < 3} 'error2)
	(call 'sys_pii 'write {handle, &value->string_data, value->string_length})
	(call 'sys_pii 'close {handle})
	(call 'obj 'ref {value})

(vp-label 'funcexit)
	(exit 'lisp 'func_save {this, value})
	(return)

(errorcases
(vp-label 'error1)
	(call 'lisp 'repl_error {this, "(save str path)", error_msg_wrong_types, args} {_, value})
(vp-label 'error2)
	(call 'lisp 'repl_error {this, "(save str path)", error_msg_open_error, args} {_, value})
	(goto 'funcexit)
	(signature 'sig 'string 'string))

	(pop-scope-syms)

(def-func-end)
