(include "sys/func.inc")
(include "class/lisp/class.inc")

(def-method 'lisp :env_args_sig)
	;inputs
	;r1 = args list object (ptr)
	;r3 = signiture pointer (pushort)
	;r4 = number of args (int)
	;outputs
	;r2 = 0 if error, else ok
	;trashes
	;r2-r7

	(entry 'lisp :env_args_sig '(r1 r3 r4))

	(assign '(r0 r1 (r1 array_length)) '(r6 r7 r2))
	(switch 'fail)
		;must be exactly this number and match signiture
		(breakif '(r2 /= r4) 'fail)
		(class/array/get_both r1 r4 r5)
		(loop-while '(r4 /= r5))
			(vp-cpy-ir-us r3 0 r1)
			(vp-cpy-dr r3 r1 r1)
			(call 'obj :inst_of '((r4 0) r1) '(_ r1))
			(breakif '(r1 = 0) 'fail)
			(vp-add-cr ptr_size r4)
			(vp-add-cr short_size r3)
		(loop-end)
		(assign '(r6 r7 -1) '(r0 r1 r2))

		(exit 'lisp :env_args_sig '(r2))
		(vp-ret)
	(endswitch)
	(assign '(r6 r7 0) '(r0 r1 r2))

	(exit 'lisp :env_args_sig '(r2))
	(vp-ret)

(def-func-end)

(def-method 'lisp :env_args_type)
	;inputs
	;r1 = args list object (ptr)
	;r3 = vtable pointer (ptr)
	;r4 = minimum number of args (int)
	;outputs
	;r2 = 0 if error, else ok
	;trashes
	;r2-r7

	(entry 'lisp :env_args_type '(r1 r3 r4))

	(assign '(r0 r1 (r1 array_length)) '(r6 r7 r2))
	(switch 'fail)
		;must be at least this number of this type
		(breakif '(r2 < r4) 'fail)
		(class/array/get_both r1 r4 r5)
		(loop-while '(r4 /= r5))
			(call 'obj :inst_of '((r4 0) r3) '(_ r1))
			(breakif '(r1 = 0) 'fail)
			(vp-add-cr ptr_size r4)
		(loop-end)
		(assign '(r6 r7 -1) '(r0 r1 r2))

		(exit 'lisp :env_args_type '(r2))
		(vp-ret)
	(endswitch)
	(assign '(r6 r7 0) '(r0 r1 r2))

	(exit 'lisp :env_args_type '(r2))
	(vp-ret)

(def-func-end)

(def-method 'lisp :env_args_match)
	;inputs
	;r1 = args list object (ptr)
	;r3 = vtable pointer (ptr)
	;r4 = minimum number of args (int)
	;outputs
	;r2 = 0 if error, else ok
	;trashes
	;r2-r7

	(entry 'lisp :env_args_match '(r1 r3 r4))

	(assign '(r0 r1 (r1 array_length)) '(r6 r7 r2))
	(switch 'fail)
		;must be at least this number of this type and all identical
		(breakif '(r2 < r4) 'fail)
		(vpif '(r2 /= 0))
			(class/array/get_both r1 r4 r5)
			(call 'obj :inst_of '((r4 0) r3) '(_ r1))
			(breakif '(r1 = 0) 'fail)
			(vp-add-cr ptr_size r4)
			(loop-while '(r4 /= r5))
				(assign '((r4 0)) '(r0))
				(assign '((r0 obj_vtable)) '(r0))
				(breakif '(r1 /= r0) 'fail)
				(vp-add-cr ptr_size r4)
			(loop-end)
		(endif)
		(assign '(r6 r7 -1) '(r0 r1 r2))

		(exit 'lisp :env_args_match '(r2))
		(vp-ret)
	(endswitch)
	(assign '(r6 r7 0) '(r0 r1 r2))

	(exit 'lisp :env_args_match '(r2))
	(vp-ret)

(def-func-end)
