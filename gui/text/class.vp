(include "sys/func.inc")
(include "gui/ctx/class.inc")
(include "gui/font/class.inc")
(include "gui/texture/class.inc")
(include "gui/text/class.inc")
(include "class/sym/class.inc")

(def-method 'text :draw)
	;inputs
	;r0 = text object (ptr)
	;outputs
	;r0 = text object (ptr)
	;trashes
	;r1-r14

	(ptr 'this 'txt 'font 'str)
	(ulong 'handle)
	(int 'w 'h)
	(uint 'col)

	;save inputs
	(push-scope)
	(entry 'text :draw {this})

	;get properties, do checks for any changes
	(call 'text :get_long_prop {this, static_sym_ink_color} {_, col})
	(call 'text :get_prop {this, static_sym_font} {_, font})
	(call 'text :get_prop {this, static_sym_text} {_, str})

	;draw text
	(vpif {str && font})
		(call 'sym :intern_str {str} {str})
		(call 'font :sym_texture {font, str} {_, txt})
		(vpif {txt})
			(call 'texture :get_metrics {txt} {_, handle, w, h})
			(call 'ctx :blit {this, handle, col, 0, (this->view_h - h) >>> 1, w, h})
			(call 'texture :deref {txt})
		(endif)
		(call 'sym :deref {str})
	(endif)

	(exit 'text :draw {this})
	(pop-scope)
	(return)

(def-func-end)
