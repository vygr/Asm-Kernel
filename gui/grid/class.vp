(include "sys/func.inc")
(include "gui/grid/class.inc")
(include "class/sym/class.inc")

(gen-create 'grid)
(gen-vtable 'grid)

(def-method 'grid :layout)
	;inputs
	;r0 = grid object (ptr)
	;outputs
	;r0 = grid object (ptr)
	;trashes
	;r1-r14

	(def-struct 'local)
		(ptr 'this)
		(uint 'width 'height 'count)
	(def-struct-end)

	(vp-alloc local_size)
	(entry 'grid :layout '(r0))

	(call 'grid :get_long_prop '(r0 static_sym_grid_width) '(r0 (rsp local_width)))
	(call 'grid :get_long_prop '(r0 static_sym_grid_height) '(r0 (rsp local_height)))
	(vp-xor-rr r2 r2)
	(assign '(r0 r2) '((rsp local_this) (rsp local_count)))
	(call 'grid :forward '(r0 rsp ($ callback)) '(r0))

	(exit 'grid :layout '(r0))
	(vp-free local_size)
	(vp-ret)

(vp-label 'callback)
	(entry 'view :forward_callback '(r0 r1))

	(vp-push r0)
	(assign '((r1 local_count) (r1 local_width) (r1 local_height)) '(r0 r3 r4))
	(vp-xor-rr r2 r2)
	(vp-div-rrr r3 r2 r0)
	(assign '(r2 r0 (r1 local_this)) '(r5 r6 r0))
	(assign '((r0 view_w) (r0 view_h)) '(r7 r8))
	(assign '(r7 r8) '(r9 r10))

	;x
	(vp-mul-rr r5 r7)
	(vp-xor-rr r2 r2)
	(vp-cpy-rr r7 r0)
	(vp-div-rrr r3 r2 r0)
	(vp-add-cr 1 r5)
	(vp-cpy-rr r0 r7)
	;y
	(vp-mul-rr r6 r8)
	(vp-xor-rr r2 r2)
	(vp-cpy-rr r8 r0)
	(vp-div-rrr r4 r2 r0)
	(vp-add-cr 1 r6)
	(vp-cpy-rr r0 r8)
	;x1
	(vp-mul-rr r5 r9)
	(vp-xor-rr r2 r2)
	(vp-cpy-rr r9 r0)
	(vp-div-rrr r3 r2 r0)
	(vp-cpy-rr r0 r9)
	;y1
	(vp-mul-rr r6 r10)
	(vp-xor-rr r2 r2)
	(vp-cpy-rr r10 r0)
	(vp-div-rrr r4 r2 r0)
	(vp-cpy-rr r0 r10)

	(vp-sub-rr r7 r9)
	(vp-sub-rr r8 r10)
	(assign '((r1 local_count)) '(r3))
	(vp-add-cr 1 r3)
	(assign '(r3) '((r1 local_count)))
	(vp-pop r0)
	(jump 'view :change '(r0 r7 r8 r9 r10))

(def-func-end)

(def-method 'grid :pref_size)
	;inputs
	;r0 = grid object (ptr)
	;outputs
	;r0 = grid object (ptr)
	;r9 = preferred width (pixels)
	;r10 = preferred height (pixels)
	;trashes
	;r1-r14

	(def-struct 'local)
		(uint 'width 'w 'h)
	(def-struct-end)

	(vp-alloc local_size)
	(entry 'grid :pref_size '(r0))

	(vp-xor-rr r1 r1)
	(assign '(r1 r1) '((rsp local_w) (rsp local_h)))
	(call 'grid :forward '(r0 rsp ($ callback)))
	(call 'grid :get_long_prop '(r0 static_sym_grid_width) '(r0 (rsp local_width)))
	(call 'grid :get_long_prop '(r0 static_sym_grid_height) '(r0 r1))
	(assign '((rsp local_width) (rsp local_w) (rsp local_h)) '(r2 r9 r10))
	(vp-mul-rr r2 r9)
	(vp-mul-rr r1 r10)

	(exit 'grid :pref_size '(r0 r9 r10))
	(vp-free local_size)
	(vp-ret)

(vp-label 'callback)
	(entry 'view :forward_callback '(r0 r1))

	(vp-push r1)
	(call 'view :pref_size '(r0) '(_ r9 r10))
	(vp-pop r1)
	(assign '((r1 local_w)) '(r2))
	(vpif '(r9 > r2))
		(assign '(r9) '((r1 local_w)))
	(endif)
	(assign '((r1 local_h)) '(r2))
	(vpif '(r10 > r2))
		(assign '(r10) '((r1 local_h)))
	(endif)

	(exit 'view :forward_callback '(r0))
	(vp-ret)

(def-func-end)
