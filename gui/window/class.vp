(include "sys/func.inc")
(include "gui/window/class.inc")
(include "gui/ctx/class.inc")
(include "class/sym/class.inc")

(def-method 'window :draw)
	;inputs
	;r0 = window object (ptr)
	;outputs
	;r0 = window object (ptr)
	;trashes
	;r1-r14

	(def-struct 'local)
		(ptr 'this)
		(int 'border 'shadow)
		(uint 'color)
	(def-struct-end)

	(vp-alloc local_size)
	(entry 'window :draw '(r0))
	(assign '(r0) '((rsp local_this)))

	;draw panel
	(call 'window :get_long_prop '(r0 static_sym_border) '(r0 (rsp local_border)))
	(call 'window :get_long_prop '(r0 static_sym_color) '(r0 (rsp local_color)))
	(call 'window :get_long_prop '(r0 static_sym_shadow) '(r0 r1))
	(assign '(r1) '((rsp local_shadow)))
	(assign '((r0 view_w) (r0 view_h)) '(r9 r10))
	(vp-sub-rr r1 r9)
	(vp-sub-rr r1 r9)
	(vp-sub-rr r1 r10)
	(vp-sub-rr r1 r10)
	(call 'ctx :panel '((rsp local_this) (rsp local_color) 1 (rsp local_border) r1 r1 r9 r10))
	(assign '(0x80000000) '(r1))
	(assign '(r1) '((rsp local_color)))
	(loop-start)
		(assign '((rsp local_shadow)) '(r7))
		(breakif '(r7 <= 0))
		(assign '((rsp local_color)) '(r1))
		(breakif '(r1 = 0))
		(call 'ctx :set_color '((rsp local_this) r1))
		(assign '((rsp local_color) 0xff000000 (rsp local_this) (rsp local_shadow)) '(r1 r2 r0 r7))
		(vp-sub-cr 1 r7)
		(vp-cpy-rr r1 r3)
		(vp-shr-cr 1 r1)
		(vp-shr-cr 4 r3)
		(vp-add-rr r3 r1)
		(vp-and-rr r2 r1)
		(assign '(r1 r7) '((rsp local_color) (rsp local_shadow)))

		(assign '((r0 view_w) (r0 view_h)) '(r9 r10))
		(vp-add-cr 1 r7)
		(vp-sub-rr r7 r9)
		(vp-sub-rr r7 r9)
		(vp-sub-rr r7 r10)
		(vp-sub-rr r7 r10)
		(call 'ctx :box '((rsp local_this) r7 r7 r9 r10))
	(loop-end)

	(exit 'window :draw '((rsp local_this)))
	(vp-free local_size)
	(vp-ret)

(def-func-end)
