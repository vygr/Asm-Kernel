(include 'sys/func.inc)
(include 'sys/str/class.inc)

(def-method 'sys_str 'compare)
	;inputs
	;r0 = c string1 (pubyte)
	;r1 = c string2 (pubyte)
	;outputs
	;r0 = 0 if same, else -, +
	;trashes
	;r0-r3

	(entry 'sys_str 'compare '(r0 r1))
	(loop-start)
		(vp-cpy-ir-ub r0 0 r2)
		(vp-cpy-ir-ub r1 0 r3)
		(vp-sub-rr r3 r2)
		(breakif '(r2 /= 0) '(r3 = 0))
		(vp-add-cr byte_size r0)
		(vp-add-cr byte_size r1)
	(loop-end)
	(exit 'sys_str 'compare '(r2))
	(vp-ret)

(def-func-end)

(def-method 'sys_str 'copy)
	;inputs
	;r0 = c string (pubyte)
	;r1 = c string copy (pubyte)
	;outputs
	;r0 = c string end (pubyte)
	;r1 = c string copy end (pubyte)
	;trashes
	;r2

	(entry 'sys_str 'copy '(r0 r1))
	(loop-start)
		(vp-cpy-ir-ub r0 0 r2)
		(vp-cpy-ri-b r2 r1 0)
		(vp-add-cr byte_size r0)
		(vp-add-cr byte_size r1)
	(loop-until '(r2 = 0))
	(exit 'sys_str 'copy '(r0 r1))
	(vp-ret)

(def-func-end)

(def-method 'sys_str 'from_long)
	;inputs
	;r0 = number (ulong)
	;r1 = c string buffer (pubyte)
	;r2 = base (ulong)
	;outputs
	;r0 = c string buffer end (pubyte)
	;trashes
	;r0-r4

	(entry 'sys_str 'from_long '(r0 r1 r2))

	(vp-cpy-rr r2 r3)	;base
	(vp-cpy-rr r1 r4)	;buffer start
	(loop-start)
		(vp-xor-rr r2 r2)
		(vp-div-rrr-u r3 r2 r0)
		(vp-add-cr (code "0") r2)
		(vpif '(r2 > (code "9")))
			(vp-add-cr (- (code "A") (code ":")) r2)
		(endif)
		(vp-cpy-ri-b r2 r4 0)
		(vp-add-cr byte_size r4)
	(loop-until '(r0 = 0))
	(vp-cpy-ri-b r0 r4 0)
	(vp-cpy-rr r4 r0)
	(loop-start)
		(vp-sub-cr byte_size r4)
		(breakif '(r4 = r1))
		(vp-cpy-ir-ub r1 0 r2)
		(vp-cpy-ir-ub r4 0 r3)
		(vp-cpy-ri-b r3 r1 0)
		(vp-cpy-ri-b r2 r4 0)
		(vp-add-cr byte_size r1)
	(loop-until '(r1 = r4))

	(exit 'sys_str 'from_long '(r0))
	(vp-ret)

(def-func-end)

(def-method 'sys_str 'length)
	;inputs
	;r0 = c string (pubyte)
	;outputs
	;r0 = c string (pubyte)
	;r1 = c string len (bytes)
	;trashes
	;r1-r2

	(entry 'sys_str 'length '(r0))
	(vp-cpy-rr r0 r1)
	(loop-start)
		(vp-cpy-ir-ub r1 0 r2)
		(breakif '(r2 = 0))
		(vp-add-cr byte_size r1)
	(loop-end)
	(vp-sub-rr r0 r1)
	(exit 'sys_str 'length '(r0 r1))
	(vp-ret)

(def-func-end)

(def-method 'sys_str 'to_long)
	;inputs
	;r0 = c string (pubyte)
	;r1 = base (ulong)
	;outputs
	;r0 = number (ulong)
	;trashes
	;r0-r4

	(entry 'sys_str 'to_long '(r2 r1))

	(vp-xor-rr r0 r0)
	(vp-xor-rr r4 r4)
	(loop-start)
		(vp-cpy-ir-ub r2 0 r3)
		(breakif '(r3 = 0))
		(vpif '(r3 = (code ".")))
			(vp-cpy-cr 1 r4)
		(else)
			(vpif '(r3 >= (code "a")))
				(vp-sub-cr (- (code "a") (code "A")) r3)
			(endif)
			(vpif '(r3 >= (code "A")))
				(vp-sub-cr (- (code "A") (code "9") 1) r3)
			(endif)
			(vp-sub-cr (code "0") r3)
			(vp-mul-rr r1 r0)
			(vp-mul-rr r1 r4)
			(vp-add-rr r3 r0)
		(endif)
		(vp-add-cr byte_size r2)
	(loop-end)
	(vpif '(r4 /= 0))
		(vp-shl-cr 16 r0)
		(vp-ext-rr r0 r2)
		(vp-cpy-rr r4 r1)
		(vp-div-rrr r1 r2 r0)
	(endif)

	(exit 'sys_str 'to_long '(r0))
	(vp-ret)

(def-func-end)

(def-method 'sys_str 'read_utf8)
	;inputs
	;r0 = utf8 data pointer (pubyte)
	;outputs
	;r0 = utf8 data pointer (pubyte)
	;r1 = utf8 char (uint)
	;trashes
	;r0-r2

	(vp-def (utf8 c m))

	(defun-bind next-utf8 (cnt)
		(vp-and-cr (>> 0b00111111 cnt) c)
		(defq i -1)
		(while (/= (setq i (inc i)) cnt)
			(vp-cpy-ir-ub utf8 i m)
			(vp-shl-cr 6 c)
			(vp-and-cr 0b00111111 m)
			(vp-add-rr m c))
		(vp-add-cr (* cnt byte_size) utf8))

	(entry 'sys_str 'read_utf8 `(,utf8))

	(vp-cpy-ir-ub utf8 0 c)
	(vp-add-cr byte_size utf8)
	(vp-cpy-rr c m)
	(vp-and-cr 0b10000000 m)
	(vpif `(,m /= 0))
		;not 1 byte
		(vp-cpy-rr c m)
		(vp-and-cr 0b11100000 m)
		(vpif `(,m /= 0b11000000))
			;not 2 byte
			(vp-cpy-rr c m)
			(vp-and-cr 0b11110000 m)
			(vpif `(,m /= 0b11100000))
				;not 3 byte
				(vp-cpy-rr c m)
				(vp-and-cr 0b11111000 m)
				(vpif `(,m /= 0b11110000))
					;not 4 byte
					(vp-xor-rr c c)

					(exit 'sys_str 'read_utf8 `(,utf8 ,c))
					(vp-ret)
				(endif)
				;4 byte
				(next-utf8 3)

				(exit 'sys_str 'read_utf8 `(,utf8 ,c))
				(vp-ret)
			(endif)
			;3 byte
			(next-utf8 2)

			(exit 'sys_str 'read_utf8 `(,utf8 ,c))
			(vp-ret)
		(endif)
		;2 byte
		(next-utf8 1)
	(endif)

	(exit 'sys_str 'read_utf8 `(,utf8 ,c))
	(vp-ret)

(def-func-end)
