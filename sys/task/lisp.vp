(include "sys/func.inc")
(include "sys/task/class.inc")
(include "class/num/class.inc")
(include "class/str/class.inc")
(include "class/lisp/class.inc")

(def-method 'sys_task :lisp_sleep)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args list object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)
	;trashes
	;r1-r14

	(entry 'sys_task :lisp_sleep '(r0 r1))

(errorcases
	(call 'lisp :env_args_sig '(r1 ($ sig) 1) '(r2))
	(gotoif '(r2 = 0) 'error))

	(vp-push r0)
	(defq in (method-input 'sys_task :sleep))
	(list-bind-args r1 in '(num))
	(call 'sys_task :sleep in)
	(vp-pop r0)
	(assign '((r0 lisp_sym_t)) '(r1))
	(class/obj/ref r1 r2)

	(exit 'sys_task :lisp_sleep '(r0 r1))
	(vp-ret)

(errorcases
(vp-label 'error)
	(jump 'lisp :repl_error '(r0 "(task-sleep usec)" error_msg_wrong_types r1))
	(signature '(num)))

(def-func-end)

(def-method 'sys_task :lisp_mailbox)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args list object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)
	;trashes
	;r1-r14

	(entry 'sys_task :lisp_mailbox '(r0 r1))

(errorcases
	(assign '((r1 array_length)) '(r2))
	(gotoif '(r2 /= 0) 'error))

	(vp-push r0)
	(call 'sys_task :mailbox nil '(r0))
	(call 'num :create '(r0) '(r1))
	(vp-pop r0)

	(exit 'sys_task :lisp_mailbox '(r0 r1))
	(vp-ret)

(errorcases
(vp-label 'error)
	(jump 'lisp :repl_error '(r0 "(task-mailbox)" error_msg_wrong_types r1)))

(def-func-end)
